{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;AA6BA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA7BA,QAAA,oBAEA,IAiBI,EAjBE,EAAmB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAI3E,EAA6C,SAAC,EAAK,GAChD,OAAA,KAAK,MAAM,KAAK,UAAY,EAAM,EAAM,GAAK,IAEhD,EAAW,SAAS,cAAc,QAElC,EAAkC,SAAS,cAAc,+BAEzD,EAAiC,SAAS,cAAc,8BAExD,EAAwB,IAE1B,GAAa,EAIjB,EAAa,iBAAiB,QAAS,SAAA,GAChC,IACH,EAAsB,YAAY,WAChC,EAAS,MAAM,gBAAkB,EAAO,EAA0B,EAAG,EAAO,UAC3E,IACL,GAAa,IAGf,EAAY,iBAAiB,QAAS,SAAA,GACpC,cAAc,GACd,GAAa","file":"src.d8257cab.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst colors: string[] = ['#FFFFFF', '#2196F3', '#4CAF50', '#FF9800', '#009688', '#795548'];\n\ntype GetRandomNumber = (min: number, max: number) => number;\n\nconst randomIntegerFromInterval: GetRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\nconst bodyNode = document.querySelector('body');\n\nconst startBtnNode: HTMLButtonElement = document.querySelector('button[data-action=\"start\"]');\n\nconst stopBtnNode: HTMLButtonElement = document.querySelector('button[data-action=\"stop\"]');\n\nconst itervalLength: number = 1000;\n\nlet isOnChange = false;\n\nlet changeBcgByInterval: NodeJS.Timer;\n\nstartBtnNode.addEventListener('click', e => {\n  if (!isOnChange)\n    changeBcgByInterval = setInterval(() => {\n      bodyNode.style.backgroundColor = colors[randomIntegerFromInterval(0, colors.length)];\n    }, itervalLength);\n  isOnChange = true;\n});\n\nstopBtnNode.addEventListener('click', e => {\n  clearInterval(changeBcgByInterval);\n  isOnChange = false;\n});\n"]}